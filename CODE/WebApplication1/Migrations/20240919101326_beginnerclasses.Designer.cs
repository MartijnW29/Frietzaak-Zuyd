// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(FrietzaakDBContext))]
    [Migration("20240919101326_beginnerclasses")]
    partial class beginnerclasses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Gebruiker", b =>
                {
                    b.Property<int>("GebruikerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GebruikerID"));

                    b.Property<string>("Emailadres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gebruikersnaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Huisnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HuisnummerToevoeging")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plaats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Straat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefoonnummer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GebruikerID");

                    b.ToTable("Gebruikers");

                    b.HasData(
                        new
                        {
                            GebruikerID = 1,
                            Emailadres = "henk@gmail.com",
                            Gebruikersnaam = "henk",
                            Huisnummer = "69",
                            HuisnummerToevoeging = "b",
                            Plaats = "Heerlen",
                            Straat = "HuisWeg",
                            Telefoonnummer = "0669476936"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("GebruikerID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<double>("Totaalprijs")
                        .HasColumnType("float");

                    b.HasKey("OrderID");

                    b.HasIndex("GebruikerID");

                    b.HasIndex("ProductID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebApplication1.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("ProductBeschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductPrijs")
                        .HasColumnType("float");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            ProductNaam = "Frikandel",
                            ProductPrijs = 2.25
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.HasOne("WebApplication1.Models.Gebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
